field x: Int

method check_sat_Refute()
{
  assert false
}

method check_sat_bad2(this: Ref)
  requires this != null
  requires acc(this.x, write)
  requires this.x == 2
{
  assert false
}

method bad2(this: Ref, tid: Int) returns (res: Int)
  requires this != null
  requires acc(this.x, write)
  requires this.x == 2
  ensures acc(this.x, write)
  ensures this.x == 3
{
  var exc: Ref
  var return: Int
  var indet: Int
  exc := null
  inhale indet >= 0
  inhale indet < 2
  if (indet == 0) {
    assert this.x == 3
    inhale false
  } elseif (indet == 1) {
    
  }
  res := return
  assert exc == null
}

method check_sat_Object()
{
  assert false
}

method check_sat_type()
{
  assert false
}

method check_sat_subtype(subtype1: Int, subtype2: Int)
  requires subtype1 >= 0
  requires subtype1 <= 2
  requires subtype2 >= 0
  requires subtype2 <= 2
{
  assert false
}
