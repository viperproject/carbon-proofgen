// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/


field f: Int

method t1(this: Ref) returns ()
    requires acc(this.f, write)
    ensures acc(this.f, write) && (this.f == old(this.f))
{
}

method t2(this: Ref) returns ()
    requires acc(this.f, write)
    ensures acc(this.f, write) && this.f == (old(this.f) + 1)
{
    this.f := this.f+1
}

method t2b(this: Ref) returns ()
    requires acc(this.f, write)
    //:: ExpectedOutput(postcondition.violated:assertion.false)
    ensures acc(this.f, write) && this.f == (old(this.f) + 2)
{
    this.f := this.f+1
}

method t3(this: Ref) returns ()
{
    var r: Ref
    r := new()
    //:: ExpectedOutput(exhale.failed:insufficient.permission)
    exhale (old(r.f) > 0)
}

method t4(r: Ref) returns ()
    requires acc(r.f, write)
    requires (r.f) > 0
{
    exhale acc(r.f, write)

    // we hold no permission to r.f any longer, but old(r.f) is still ok
    exhale (old(r.f) > 0)
    //:: ExpectedOutput(exhale.failed:insufficient.permission)
    exhale (r.f) > 0
}

method t5(this: Ref)
    requires acc(this.f, write)
{
    this.f := 10
    t2(this)
    assert (this.f) == 11
    //:: ExpectedOutput(assert.failed:assertion.false)
    assert false
}
