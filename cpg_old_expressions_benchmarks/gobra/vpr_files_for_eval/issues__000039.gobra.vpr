field Intint$$$$_E_$$$: Int

method test2_4b5075e4_F()
{
  
  // decl 
  {
    
    
    
    // decl x1_V0: int°°, x2_V0: int@@, L_L
    {
      var x1_V0: Int
      var x2_V0: Ref
      
      // init x1_V0
      inhale x1_V0 == 0
      
      // x1_V0 = 5
      x1_V0 := 5
      
      // init x2_V0
      inhale acc(x2_V0.Intint$$$$_E_$$$, write) &&
        (x2_V0.Intint$$$$_E_$$$ == 0 && !(x2_V0 == null))
      
      // x2_V0 = 5
      x2_V0.Intint$$$$_E_$$$ := 5
      
      // L_L
      
      // x2_V0 = 8
      x2_V0.Intint$$$$_E_$$$ := 8
      
      // x1_V0 = 8
      x1_V0 := 8
      
      // assert old[L_L](x1_V0) == 8 && old[L_L](x2_V0) == 5
      // assert old[L_L](x1_V0) == 8 && old[L_L](x2_V0.Intint$$$$_E_$$$) == 5
    }
  }
}

method test3_4b5075e4_F()
{
  
  // decl 
  {
    
    
    
    // decl L_L, x1_V0: int°°, x2_V0: int@@
    {
      var x1_V0: Int
      var x2_V0: Ref
      
      // L_L
      
      // init x1_V0
      inhale x1_V0 == 0
      
      // x1_V0 = 5
      x1_V0 := 5
      
      // init x2_V0
      inhale acc(x2_V0.Intint$$$$_E_$$$, write) &&
        (x2_V0.Intint$$$$_E_$$$ == 0 && !(x2_V0 == null))
      
      // x2_V0 = 5
      x2_V0.Intint$$$$_E_$$$ := 5
      
      // x2_V0 = 8
      x2_V0.Intint$$$$_E_$$$ := 8
      
      // x1_V0 = 8
      x1_V0 := 8
      
      // assert old[L_L](x1_V0) == 8
      // assert old[L_L](x1_V0) == 8
      
      // assert old[L_L](x2_V0) == old[L_L](x2_V0)
      // assert old[L_L](x2_V0.Intint$$$$_E_$$$) == old[L_L](x2_V0.Intint$$$$_E_$$$)
    }
  }
}

method test_4b5075e4_F()
{
  
  // decl 
  {
    
    
    
    // decl x1_V0: int°°, x2_V0: int@@, L_L
    {
      var x1_V0: Int
      var x2_V0: Ref
      
      // init x1_V0
      inhale x1_V0 == 0
      
      // x1_V0 = 5
      x1_V0 := 5
      
      // init x2_V0
      inhale acc(x2_V0.Intint$$$$_E_$$$, write) &&
        (x2_V0.Intint$$$$_E_$$$ == 0 && !(x2_V0 == null))
      
      // x2_V0 = 5
      x2_V0.Intint$$$$_E_$$$ := 5
      
      // L_L
      
      // x1_V0 = 8
      x1_V0 := 8
      
      // x2_V0 = 8
      x2_V0.Intint$$$$_E_$$$ := 8
      
      // assert old[L_L](x1_V0) == 8 && old[L_L](x2_V0) == 5
      // assert old[L_L](x1_V0) == 8 && old[L_L](x2_V0.Intint$$$$_E_$$$) == 5
    }
  }
}
