field Intint$$$$_E_$$$: Int

method add_4b5075e4_F(x_V0: Ref, n_V0: Int)
  requires acc(x_V0.Intint$$$$_E_$$$, write)
  ensures acc(x_V0.Intint$$$$_E_$$$, write) &&
    x_V0.Intint$$$$_E_$$$ == old(x_V0.Intint$$$$_E_$$$) + n_V0
{
  
  // decl x_V0_CN0: *int@°°, n_V0_CN1: int°°
  {
    var x_V0_CN0: Ref
    var n_V0_CN1: Int
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == null
    
    // init n_V0_CN1
    inhale n_V0_CN1 == 0
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // n_V0_CN1 = n_V0
    n_V0_CN1 := n_V0
    
    // decl 
    
    // *x_V0_CN0 = *x_V0_CN0 + n_V0_CN1
    x_V0_CN0.Intint$$$$_E_$$$ := x_V0_CN0.Intint$$$$_E_$$$ + n_V0_CN1
    
    // return
  }
}

method mult_4b5075e4_F(x_V0: Ref, n_V0: Int)
  requires acc(x_V0.Intint$$$$_E_$$$, write)
  ensures acc(x_V0.Intint$$$$_E_$$$, write) &&
    x_V0.Intint$$$$_E_$$$ == old(x_V0.Intint$$$$_E_$$$) * n_V0
{
  
  // decl x_V0_CN0: *int@°°, n_V0_CN1: int°°
  {
    var x_V0_CN0: Ref
    var n_V0_CN1: Int
    
    
    
    // init x_V0_CN0
    inhale x_V0_CN0 == null
    
    // init n_V0_CN1
    inhale n_V0_CN1 == 0
    
    // x_V0_CN0 = x_V0
    x_V0_CN0 := x_V0
    
    // n_V0_CN1 = n_V0
    n_V0_CN1 := n_V0
    
    // decl 
    
    // *x_V0_CN0 = *x_V0_CN0 * n_V0_CN1
    x_V0_CN0.Intint$$$$_E_$$$ := x_V0_CN0.Intint$$$$_E_$$$ * n_V0_CN1
    
    // return
  }
}

method test1_4b5075e4_F() returns (x_V0: Int)
  ensures x_V0 == 6
{
  inhale x_V0 == 0
  
  // decl x_V0_CN0: int@@
  {
    var x_V0_CN0: Ref
    
    
    {
      var fn$$0_activation: Bool
      var fn$$0_0: Ref
      var fn$$0_1: Int
      fn$$0_activation := false
      
      // init x_V0_CN0
      inhale acc(x_V0_CN0.Intint$$$$_E_$$$, write) &&
        (x_V0_CN0.Intint$$$$_E_$$$ == 0 && !(x_V0_CN0 == null))
      
      // decl 
      
      // defer add_4b5075e4_F(&x_V0_CN0, 1)
      fn$$0_0 := x_V0_CN0
      fn$$0_1 := 1
      fn$$0_activation := true
      
      // x_V0_CN0 = 5
      x_V0_CN0.Intint$$$$_E_$$$ := 5
      if (fn$$0_activation) {
        
        // add_4b5075e4_F(fn$$0_0, fn$$0_1)
        // REWRITTEN
        // add_4b5075e4_F(fn$$0_0, fn$$0_1)
        // Save old values
        var oldFn0_0Intint: Int := fn$$0_0.Intint$$$$_E_$$$
        // Exhale preconditions
        exhale acc(fn$$0_0.Intint$$$$_E_$$$, write)
        // Inhale postconditions
        inhale acc(fn$$0_0.Intint$$$$_E_$$$, write) &&
          fn$$0_0.Intint$$$$_E_$$$ == oldFn0_0Intint + fn$$0_1
      }
    }
    
    // x_V0 = x_V0_CN0
    x_V0 := x_V0_CN0.Intint$$$$_E_$$$
  }
}

method test2_4b5075e4_F() returns (x_V0: Int)
  ensures x_V0 == 6
{
  inhale x_V0 == 0
  
  // decl x_V0_CN0: int@@
  {
    var x_V0_CN0: Ref
    
    
    {
      var fn$$0_activation: Bool
      var fn$$0_0: Ref
      var fn$$0_1: Int
      fn$$0_activation := false
      
      // init x_V0_CN0
      inhale acc(x_V0_CN0.Intint$$$$_E_$$$, write) &&
        (x_V0_CN0.Intint$$$$_E_$$$ == 0 && !(x_V0_CN0 == null))
      
      // decl 
      
      // defer add_4b5075e4_F(&x_V0_CN0, 1)
      fn$$0_0 := x_V0_CN0
      fn$$0_1 := 1
      fn$$0_activation := true
      
      // x_V0_CN0 = 5
      x_V0_CN0.Intint$$$$_E_$$$ := 5
      
      // x_V0_CN0 = x_V0_CN0
      x_V0_CN0.Intint$$$$_E_$$$ := x_V0_CN0.Intint$$$$_E_$$$
      
      // return
      if (fn$$0_activation) {
        
        // add_4b5075e4_F(fn$$0_0, fn$$0_1)
        // REWRITTEN
        // add_4b5075e4_F(fn$$0_0, fn$$0_1)
        // Save old value
        var oldFn0_0Intint: Int := fn$$0_0.Intint$$$$_E_$$$
        // Exhale preconditions
        exhale acc(fn$$0_0.Intint$$$$_E_$$$, write)
        // Inhale postconditions
        inhale acc(fn$$0_0.Intint$$$$_E_$$$, write) &&
          fn$$0_0.Intint$$$$_E_$$$ == oldFn0_0Intint + fn$$0_1
      }
    }
    
    // x_V0 = x_V0_CN0
    x_V0 := x_V0_CN0.Intint$$$$_E_$$$
  }
}

method test3_4b5075e4_F() returns (x_V0: Int)
  ensures x_V0 == 6
{
  inhale x_V0 == 0
  
  // decl x_V0_CN0: int@@
  {
    var x_V0_CN0: Ref
    
    
    {
      var fn$$0_activation: Bool
      var fn$$0_0: Ref
      var fn$$0_1: Int
      fn$$0_activation := false
      
      // init x_V0_CN0
      inhale acc(x_V0_CN0.Intint$$$$_E_$$$, write) &&
        (x_V0_CN0.Intint$$$$_E_$$$ == 0 && !(x_V0_CN0 == null))
      
      // decl 
      
      // defer add_4b5075e4_F(&x_V0_CN0, 1)
      fn$$0_0 := x_V0_CN0
      fn$$0_1 := 1
      fn$$0_activation := true
      
      // x_V0_CN0 = 5
      x_V0_CN0.Intint$$$$_E_$$$ := 5
      
      // return
      if (fn$$0_activation) {
        // add_4b5075e4_F(fn$$0_0, fn$$0_1)
        // REWRITTEN
        // add_4b5075e4_F(fn$$0_0, fn$$0_1)
        // Save old value
        var oldFn0_0Intint: Int := fn$$0_0.Intint$$$$_E_$$$
        // Exhale preconditions
        exhale acc(fn$$0_0.Intint$$$$_E_$$$, write)
        // Inhale postconditions
        inhale acc(fn$$0_0.Intint$$$$_E_$$$, write) &&
          fn$$0_0.Intint$$$$_E_$$$ == oldFn0_0Intint + fn$$0_1
      }
    }
    
    // x_V0 = x_V0_CN0
    x_V0 := x_V0_CN0.Intint$$$$_E_$$$
  }
}

method test4_4b5075e4_F() returns (x_V0: Int)
  ensures x_V0 == 11
{
  inhale x_V0 == 0
  
  // decl x_V0_CN0: int@@
  {
    var x_V0_CN0: Ref
    
    
    {
      var fn$$0_activation: Bool
      var fn$$0_0: Ref
      var fn$$0_1: Int
      fn$$0_activation := false
      {
        var fn$$1_activation: Bool
        var fn$$1_0: Ref
        var fn$$1_1: Int
        fn$$1_activation := false
        
        // init x_V0_CN0
        inhale acc(x_V0_CN0.Intint$$$$_E_$$$, write) &&
          (x_V0_CN0.Intint$$$$_E_$$$ == 0 && !(x_V0_CN0 == null))
        
        // decl 
        
        // defer add_4b5075e4_F(&x_V0_CN0, 1)
        fn$$0_0 := x_V0_CN0
        fn$$0_1 := 1
        fn$$0_activation := true
        
        // defer mult_4b5075e4_F(&x_V0_CN0, 2)
        fn$$1_0 := x_V0_CN0
        fn$$1_1 := 2
        fn$$1_activation := true
        
        // x_V0_CN0 = 5
        x_V0_CN0.Intint$$$$_E_$$$ := 5
        
        // return
        if (fn$$1_activation) {
          
          // mult_4b5075e4_F(fn$$1_0, fn$$1_1)
          // REWRITTEN
          // mult_4b5075e4_F(fn$$1_0, fn$$1_1)
          // Save old field value
          var oldFn1_0Intint: Int := fn$$1_0.Intint$$$$_E_$$$
          // Exhale preconditions
          exhale acc(fn$$1_0.Intint$$$$_E_$$$, write)
          // Inhale postconditions
          inhale acc(fn$$1_0.Intint$$$$_E_$$$, write) &&
            fn$$1_0.Intint$$$$_E_$$$ == oldFn1_0Intint * fn$$1_1
        }
      }
      if (fn$$0_activation) {
        // add_4b5075e4_F(fn$$0_0, fn$$0_1)
        // REWRITTEN
        // add_4b5075e4_F(fn$$0_0, fn$$0_1)
        // Save old value
        var oldFn0_0Intint: Int := fn$$0_0.Intint$$$$_E_$$$
        // Exhale preconditions
        exhale acc(fn$$0_0.Intint$$$$_E_$$$, write)
        // Inhale postconditions
        inhale acc(fn$$0_0.Intint$$$$_E_$$$, write) &&
          fn$$0_0.Intint$$$$_E_$$$ == oldFn0_0Intint + fn$$0_1
      }
    }
    
    // x_V0 = x_V0_CN0
    x_V0 := x_V0_CN0.Intint$$$$_E_$$$
  }
}

method test5_4b5075e4_F() returns (x_V0: Int)
  ensures false
{
  inhale x_V0 == 0
  
  // decl x_V0_CN0: int@@
  {
    var x_V0_CN0: Ref
    
    
    {
      var fn$$0_activation: Bool
      var fn$$0_0: Ref
      var fn$$0_1: Int
      fn$$0_activation := false
      
      // init x_V0_CN0
      inhale acc(x_V0_CN0.Intint$$$$_E_$$$, write) &&
        (x_V0_CN0.Intint$$$$_E_$$$ == 0 && !(x_V0_CN0 == null))
      
      // decl 
      
      // defer add_4b5075e4_F(&x_V0_CN0, 1)
      fn$$0_0 := x_V0_CN0
      fn$$0_1 := 1
      fn$$0_activation := true
      
      // x_V0_CN0 = 5
      x_V0_CN0.Intint$$$$_E_$$$ := 5
      if (fn$$0_activation) {
        // add_4b5075e4_F(fn$$0_0, fn$$0_1)
        // REWRITTEN
        // add_4b5075e4_F(fn$$0_0, fn$$0_1)
        // Save old values
        var oldFn0_0Intint: Int := fn$$0_0.Intint$$$$_E_$$$
        // Exhale preconditions
        exhale acc(fn$$0_0.Intint$$$$_E_$$$, write)
        // Inhale postconditions
        inhale acc(fn$$0_0.Intint$$$$_E_$$$, write) &&
          fn$$0_0.Intint$$$$_E_$$$ == oldFn0_0Intint + fn$$0_1
      }
    }
    
    // x_V0 = x_V0_CN0
    x_V0 := x_V0_CN0.Intint$$$$_E_$$$
  }
}

method test6_4b5075e4_F() returns (x_V0: Int)
  ensures false
{
  inhale x_V0 == 0
  
  // decl x_V0_CN0: int@@
  {
    var x_V0_CN0: Ref
    
    
    {
      var fn$$0_activation: Bool
      var fn$$0_0: Ref
      var fn$$0_1: Int
      fn$$0_activation := false
      
      // init x_V0_CN0
      inhale acc(x_V0_CN0.Intint$$$$_E_$$$, write) &&
        (x_V0_CN0.Intint$$$$_E_$$$ == 0 && !(x_V0_CN0 == null))
      
      // decl 
      
      // defer add_4b5075e4_F(&x_V0_CN0, 1)
      fn$$0_0 := x_V0_CN0
      fn$$0_1 := 1
      fn$$0_activation := true
      
      // x_V0_CN0 = 5
      x_V0_CN0.Intint$$$$_E_$$$ := 5
      
      // x_V0_CN0 = x_V0_CN0
      x_V0_CN0.Intint$$$$_E_$$$ := x_V0_CN0.Intint$$$$_E_$$$
      
      // return
      if (fn$$0_activation) {
        // add_4b5075e4_F(fn$$0_0, fn$$0_1)
        // REWRITTEN
        // add_4b5075e4_F(fn$$0_0, fn$$0_1)
        // Save old values
        var oldFn0_0Intint: Int := fn$$0_0.Intint$$$$_E_$$$
        // Exhale preconditions
        exhale acc(fn$$0_0.Intint$$$$_E_$$$, write)
        // Inhale postconditions
        inhale acc(fn$$0_0.Intint$$$$_E_$$$, write) &&
          fn$$0_0.Intint$$$$_E_$$$ == oldFn0_0Intint + fn$$0_1
      }
    }
    
    // x_V0 = x_V0_CN0
    x_V0 := x_V0_CN0.Intint$$$$_E_$$$
  }
}

method test7_4b5075e4_F() returns (x_V0: Int)
  ensures false
{
  inhale x_V0 == 0
  
  // decl x_V0_CN0: int@@
  {
    var x_V0_CN0: Ref
    
    
    {
      var fn$$0_activation: Bool
      var fn$$0_0: Ref
      var fn$$0_1: Int
      fn$$0_activation := false
      
      // init x_V0_CN0
      inhale acc(x_V0_CN0.Intint$$$$_E_$$$, write) &&
        (x_V0_CN0.Intint$$$$_E_$$$ == 0 && !(x_V0_CN0 == null))
      
      // decl 
      
      // defer add_4b5075e4_F(&x_V0_CN0, 1)
      fn$$0_0 := x_V0_CN0
      fn$$0_1 := 1
      fn$$0_activation := true
      
      // x_V0_CN0 = 5
      x_V0_CN0.Intint$$$$_E_$$$ := 5
      
      // return
      if (fn$$0_activation) {
        // add_4b5075e4_F(fn$$0_0, fn$$0_1)
        // REWRITTEN
        // add_4b5075e4_F(fn$$0_0, fn$$0_1)
        // Save old values
        var oldFn0_0Intint: Int := fn$$0_0.Intint$$$$_E_$$$
        // Exhale preconditions
        exhale acc(fn$$0_0.Intint$$$$_E_$$$, write)
        // Inhale postconditions
        inhale acc(fn$$0_0.Intint$$$$_E_$$$, write) &&
          fn$$0_0.Intint$$$$_E_$$$ == oldFn0_0Intint + fn$$0_1
      }
    }
    
    // x_V0 = x_V0_CN0
    x_V0 := x_V0_CN0.Intint$$$$_E_$$$
  }
}
